name: Build Rust Binary
permissions:
    contents: write

on:
  push:
    branches:
      - feat/local-server

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Build Binary
        run: cargo build --release

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/me
          asset_name: me
          asset_content_type: application/octet-stream
      
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.tar.gz,foo/*.txt"

# jobs:
#   docker-build:
#     runs-on: macos-latest

#     steps:
#       # Step 1: Checkout the code
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Docker tookchain
#         uses: docker/setup-docker-action@v4

#       # Step 2: Log in to DockerHub
#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       # Step 3: Build and push Docker image
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: Dockerfile
#           push: true
#           tags: karrerdigital/me:latest
#           platforms: linux/arm64